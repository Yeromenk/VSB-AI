generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  username  String
  password  String
  createdAt DateTime @default(now())
}

model UserChats {
  id        Int      @id @default(autoincrement()) // Primary key
  userId    String   @unique // User ID
  chats     Chat[] // Связь с моделью Chat
  createdAt DateTime @default(now()) // Дата создания записи
  updatedAt DateTime @updatedAt // Автоматическое обновление даты при изменениях
}

model Chat {
  id          String     @id @default(cuid()) // Primary key
  userId      String // User ID (для связки с конкретным пользователем)
  title       String // Название чата
  createdAt   DateTime   @default(now()) // Время создания чата
  history     Message[] // Связь с моделью Message
  UserChats   UserChats? @relation(fields: [userChatsId], references: [id])
  userChatsId Int?
}

model Message {
  id        Int      @id @default(autoincrement()) // Primary key
  chatId    String // Foreign key для связи с моделью Chat
  role      Role // Роль (user или model)
  text      String // Текст сообщения
  createdAt DateTime @default(now()) // Время создания сообщения

  chat Chat @relation(fields: [chatId], references: [id]) // Связь с моделью Chat
}

enum Role {
  user
  model
}
